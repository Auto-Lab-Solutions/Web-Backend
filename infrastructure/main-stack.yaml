AWSTemplateFormatVersion: '2010-09-09'
Description: 'Auto Lab Solutions - Complete Backend Infrastructure'

Parameters:
  Environment:
    Type: String
    Default: production
    Description: Environment name (development, production)

  S3BucketName:
    Type: String
    Default: auto-lab-reports
    Description: S3 bucket name for reports
  
  CloudFormationBucket:
    Type: String
    Default: auto-lab-cloudformation-templates
    Description: S3 bucket containing CloudFormation templates and Lambda packages

  BackupBucketName:
    Type: String
    Default: auto-lab-backups
    Description: S3 bucket name for storing backups (must exist outside stack - not managed by CloudFormation)

  # Reports CloudFront Custom Domain Parameters
  ReportsDomainName:
    Type: String
    Description: Custom domain name for reports CloudFront distribution (e.g., reports.autolabsolutions.com)
    Default: ''

  ReportsHostedZoneId:
    Type: String
    Description: Route53 hosted zone ID for reports domain
    Default: ''

  ReportsAcmCertificateArn:
    Type: String
    Description: ACM certificate ARN for reports domain (must be in us-east-1)
    Default: ''

  EnableReportsCustomDomain:
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: Whether to enable custom domain for reports CloudFront distribution

  StripeSecretKey:
    Type: String
    NoEcho: true
    Description: Stripe secret key for payment processing
  
  StripeWebhookSecret:
    Type: String
    NoEcho: true
    Description: Stripe webhook endpoint secret for signature verification

  Auth0Domain:
    Type: String
    NoEcho: true
    Description: Auth0 domain for authentication
    Default: ""

  Auth0Audience:
    Type: String
    NoEcho: true
    Description: Auth0 API audience for token validation
    Default: ""

  ReportsBucketName:
    Type: String
    Description: S3 bucket name for storing reports
    Default: ""

  SharedKey:
    Type: String
    NoEcho: true
    Description: Shared key for internal communication

  FrontendRootUrl:
    Type: String
    Description: Frontend root URL for email links
    Default: "https://autolabsolutions.com"

  FromEmail:
    Type: String
    Description: SES verified email address for sending notifications
    Default: "noreply@autolabsolutions.com"

  SesRegion:
    Type: String
    Description: AWS region for SES service
    Default: "ap-southeast-2"

  # Frontend Website Parameters
  EnableFrontendWebsite:
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: Whether to deploy the frontend website

  FrontendDomainName:
    Type: String
    Description: The full domain name for the frontend website (leave empty for development)
    Default: ''

  FrontendHostedZoneId:
    Type: String
    Description: The ID of the Route53 hosted zone for frontend domain (leave empty to skip Route53)
    Default: ''

  FrontendAcmCertificateArn:
    Type: String
    Description: ARN of the ACM certificate in us-east-1 for frontend domain (leave empty for development)
    Default: ''

  EnableCustomDomain:
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: Whether to enable custom domain for frontend

  # API Gateway Custom Domain Parameters
  EnableApiCustomDomains:
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: Whether to enable custom domains for API Gateway endpoints

  ApiDomainName:
    Type: String
    Description: The domain name for the REST API (e.g., api.autolabsolutions.com)
    Default: ''

  WebSocketDomainName:
    Type: String
    Description: The domain name for the WebSocket API (e.g., ws.autolabsolutions.com)
    Default: ''

  ApiHostedZoneId:
    Type: String
    Description: The ID of the Route53 hosted zone for API domains
    Default: ''

  ApiAcmCertificateArn:
    Type: String
    Description: ARN of the ACM certificate for API domains (must be in the same region)
    Default: ''

  # Firebase Push Notification Parameters (Optional)
  EnableFirebaseNotifications:
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: Whether to enable Firebase push notifications

  FirebaseProjectId:
    Type: String
    Description: Firebase project ID for push notifications (required if Firebase enabled)
    Default: ""

  FirebaseServiceAccountKey:
    Type: String
    NoEcho: true
    Description: Firebase service account key (JSON) for authentication (required if Firebase enabled)
    Default: ""

Conditions:
  ShouldDeployFrontend: !Equals [!Ref EnableFrontendWebsite, 'true']
  ShouldEnableFirebase: !Equals [!Ref EnableFirebaseNotifications, 'true']
  ShouldEnableApiCustomDomains: !Equals [!Ref EnableApiCustomDomains, 'true']
  ShouldEnableReportsCustomDomain: !Equals [!Ref EnableReportsCustomDomain, 'true']

Resources:
  # DynamoDB Tables
  DynamoDBStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${CloudFormationBucket}.s3.amazonaws.com/dynamodb-tables.yaml'
      Parameters:
        Environment: !Ref Environment

  # Lambda Functions (initial deployment without notification queues)
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - DynamoDBStack
      - S3CloudFrontStack
      - InvoiceQueueStack
      - SESBounceComplaintStack
    Properties:
      TemplateURL: !Sub 'https://${CloudFormationBucket}.s3.amazonaws.com/lambda-functions.yaml'
      Parameters:
        Environment: !Ref Environment
        CloudFormationBucket: !Ref CloudFormationBucket
        StaffTable: !GetAtt DynamoDBStack.Outputs.StaffTable
        UsersTable: !GetAtt DynamoDBStack.Outputs.UsersTable
        ConnectionsTable: !GetAtt DynamoDBStack.Outputs.ConnectionsTable
        MessagesTable: !GetAtt DynamoDBStack.Outputs.MessagesTable
        UnavailableSlotsTable: !GetAtt DynamoDBStack.Outputs.UnavailableSlotsTable
        AppointmentsTable: !GetAtt DynamoDBStack.Outputs.AppointmentsTable
        ServicePricesTable: !GetAtt DynamoDBStack.Outputs.ServicePricesTable
        OrdersTable: !GetAtt DynamoDBStack.Outputs.OrdersTable
        ItemPricesTable: !GetAtt DynamoDBStack.Outputs.ItemPricesTable
        InquiriesTable: !GetAtt DynamoDBStack.Outputs.InquiriesTable
        PaymentsTable: !GetAtt DynamoDBStack.Outputs.PaymentsTable
        InvoicesTable: !GetAtt DynamoDBStack.Outputs.InvoicesTable
        StripeSecretKey: !Ref StripeSecretKey
        StripeWebhookSecret: !Ref StripeWebhookSecret
        Auth0Domain: !Ref Auth0Domain
        Auth0Audience: !Ref Auth0Audience
        CloudFrontDomain: !If [ShouldEnableReportsCustomDomain, !Ref ReportsDomainName, !GetAtt S3CloudFrontStack.Outputs.CloudFrontDomainName]
        ReportsBucketName: !Sub 'auto-lab-reports-${AWS::AccountId}-${Environment}'
        FrontendRootUrl: !Ref FrontendRootUrl
        SharedKey: !Ref SharedKey
        InvoiceQueueUrl: !GetAtt InvoiceQueueStack.Outputs.InvoiceQueueUrl
        EmailNotificationQueueUrl: ""
        WebSocketNotificationQueueUrl: ""
        FirebaseNotificationQueueUrl: ""
        InvoiceGenerationQueueUrl: !GetAtt InvoiceQueueStack.Outputs.InvoiceGenerationQueueUrl
        FromEmail: !Ref FromEmail
        SesRegion: !Ref SesRegion
        EmailSuppressionTableName: !GetAtt SESBounceComplaintStack.Outputs.EmailSuppressionTableName
        EmailAnalyticsTableName: !GetAtt SESBounceComplaintStack.Outputs.EmailAnalyticsTableName

  # API Gateway
  ApiGatewayStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: LambdaStack
    Properties:
      TemplateURL: !Sub 'https://${CloudFormationBucket}.s3.amazonaws.com/api-gateway.yaml'
      Parameters:
        Environment: !Ref Environment
        StaffAuthorizerArn: !GetAtt LambdaStack.Outputs.StaffAuthorizerArn
        StaffAuthorizerOptionalArn: !GetAtt LambdaStack.Outputs.StaffAuthorizerOptionalArn
        GetPricesArn: !GetAtt LambdaStack.Outputs.GetPricesArn
        GetUsersArn: !GetAtt LambdaStack.Outputs.GetUsersArn
        GetAppointmentsArn: !GetAtt LambdaStack.Outputs.GetAppointmentsArn
        CreateAppointmentArn: !GetAtt LambdaStack.Outputs.CreateAppointmentArn
        UpdateAppointmentArn: !GetAtt LambdaStack.Outputs.UpdateAppointmentArn
        GetUnavailableSlotsArn: !GetAtt LambdaStack.Outputs.GetUnavailableSlotsArn
        UpdateUnavailableSlotsArn: !GetAtt LambdaStack.Outputs.UpdateUnavailableSlotsArn
        GetOrdersArn: !GetAtt LambdaStack.Outputs.GetOrdersArn
        CreateOrderArn: !GetAtt LambdaStack.Outputs.CreateOrderArn
        UpdateOrderArn: !GetAtt LambdaStack.Outputs.UpdateOrderArn
        ConfirmCashPaymentArn: !GetAtt LambdaStack.Outputs.ConfirmCashPaymentArn
        CreatePaymentIntentArn: !GetAtt LambdaStack.Outputs.CreatePaymentIntentArn
        ConfirmStripePaymentArn: !GetAtt LambdaStack.Outputs.ConfirmStripePaymentArn
        WebhookStripePaymentArn: !GetAtt LambdaStack.Outputs.WebhookStripePaymentArn
        GetInvoicesArn: !GetAtt LambdaStack.Outputs.GetInvoicesArn
        GenerateInvoiceArn: !GetAtt LambdaStack.Outputs.ApiGenerateInvoiceArn
        GetInquiriesArn: !GetAtt LambdaStack.Outputs.GetInquiriesArn
        CreateInquiryArn: !GetAtt LambdaStack.Outputs.CreateInquiryArn
        GetReportUploadUrlArn: !GetAtt LambdaStack.Outputs.GetReportUploadUrlArn
        GetAnalyticsArn: !GetAtt LambdaStack.Outputs.GetAnalyticsArn
        GetStaffRolesArn: !GetAtt LambdaStack.Outputs.GetStaffRolesArn
        NotifyArn: !GetAtt LambdaStack.Outputs.NotifyArn
        TakeUserArn: !GetAtt LambdaStack.Outputs.TakeUserArn
        GetConnectionsArn: !GetAtt LambdaStack.Outputs.GetConnectionsArn
        GetMessagesArn: !GetAtt LambdaStack.Outputs.GetMessagesArn
        GetLastMessagesArn: !GetAtt LambdaStack.Outputs.GetLastMessagesArn
        SendMessageArn: !GetAtt LambdaStack.Outputs.SendMessageArn
        ApiEmailSuppressionManagerArn: !GetAtt LambdaStack.Outputs.ApiEmailSuppressionManagerArn
        EnableApiCustomDomains: !Ref EnableApiCustomDomains
        ApiDomainName: !Ref ApiDomainName
        ApiHostedZoneId: !Ref ApiHostedZoneId
        ApiAcmCertificateArn: !Ref ApiAcmCertificateArn

  # WebSocket API
  WebSocketStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: LambdaStack
    Properties:
      TemplateURL: !Sub 'https://${CloudFormationBucket}.s3.amazonaws.com/websocket-api.yaml'
      Parameters:
        Environment: !Ref Environment
        WsConnectArn: !GetAtt LambdaStack.Outputs.WsConnectArn
        WsDisconnectArn: !GetAtt LambdaStack.Outputs.WsDisconnectArn
        WsInitArn: !GetAtt LambdaStack.Outputs.WsInitArn
        WsPingArn: !GetAtt LambdaStack.Outputs.WsPingArn
        WsStaffInitArn: !GetAtt LambdaStack.Outputs.WsStaffInitArn
        EnableApiCustomDomains: !Ref EnableApiCustomDomains
        WebSocketDomainName: !Ref WebSocketDomainName
        ApiHostedZoneId: !Ref ApiHostedZoneId
        ApiAcmCertificateArn: !Ref ApiAcmCertificateArn

  # Invoice Queue Stack
  InvoiceQueueStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: [DynamoDBStack, S3CloudFrontStack]
    Properties:
      TemplateURL: !Sub 'https://${CloudFormationBucket}.s3.amazonaws.com/invoice-queue.yaml'
      Parameters:
        EnvironmentName: !Ref Environment
        CloudFormationBucket: !Ref CloudFormationBucket
        StaffTable: !GetAtt DynamoDBStack.Outputs.StaffTable
        UsersTable: !GetAtt DynamoDBStack.Outputs.UsersTable
        ConnectionsTable: !GetAtt DynamoDBStack.Outputs.ConnectionsTable
        MessagesTable: !GetAtt DynamoDBStack.Outputs.MessagesTable
        UnavailableSlotsTable: !GetAtt DynamoDBStack.Outputs.UnavailableSlotsTable
        AppointmentsTable: !GetAtt DynamoDBStack.Outputs.AppointmentsTable
        ServicePricesTable: !GetAtt DynamoDBStack.Outputs.ServicePricesTable
        OrdersTable: !GetAtt DynamoDBStack.Outputs.OrdersTable
        ItemPricesTable: !GetAtt DynamoDBStack.Outputs.ItemPricesTable
        InquiriesTable: !GetAtt DynamoDBStack.Outputs.InquiriesTable
        PaymentsTable: !GetAtt DynamoDBStack.Outputs.PaymentsTable
        InvoicesTable: !GetAtt DynamoDBStack.Outputs.InvoicesTable
        ReportsBucketName: !GetAtt S3CloudFrontStack.Outputs.ReportsBucketName
        CloudFrontDomain: !If [ShouldEnableReportsCustomDomain, !Ref ReportsDomainName, !GetAtt S3CloudFrontStack.Outputs.CloudFrontDomainName]
        FrontendRootUrl: !Ref FrontendRootUrl

  # Notification Queue Stack
  NotificationQueueStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: [DynamoDBStack, S3CloudFrontStack, WebSocketStack]
    Properties:
      TemplateURL: !Sub 'https://${CloudFormationBucket}.s3.amazonaws.com/notification-queue.yaml'
      Parameters:
        EnvironmentName: !Ref Environment
        CloudFormationBucket: !Ref CloudFormationBucket
        StaffTable: !GetAtt DynamoDBStack.Outputs.StaffTable
        UsersTable: !GetAtt DynamoDBStack.Outputs.UsersTable
        ConnectionsTable: !GetAtt DynamoDBStack.Outputs.ConnectionsTable
        MessagesTable: !GetAtt DynamoDBStack.Outputs.MessagesTable
        UnavailableSlotsTable: !GetAtt DynamoDBStack.Outputs.UnavailableSlotsTable
        AppointmentsTable: !GetAtt DynamoDBStack.Outputs.AppointmentsTable
        ServicePricesTable: !GetAtt DynamoDBStack.Outputs.ServicePricesTable
        OrdersTable: !GetAtt DynamoDBStack.Outputs.OrdersTable
        ItemPricesTable: !GetAtt DynamoDBStack.Outputs.ItemPricesTable
        InquiriesTable: !GetAtt DynamoDBStack.Outputs.InquiriesTable
        PaymentsTable: !GetAtt DynamoDBStack.Outputs.PaymentsTable
        InvoicesTable: !GetAtt DynamoDBStack.Outputs.InvoicesTable
        ReportsBucketName: !GetAtt S3CloudFrontStack.Outputs.ReportsBucketName
        CloudFrontDomain: !If [ShouldEnableReportsCustomDomain, !Ref ReportsDomainName, !GetAtt S3CloudFrontStack.Outputs.CloudFrontDomainName]
        FrontendRootUrl: !Ref FrontendRootUrl
        FromEmail: !Ref FromEmail
        WebSocketApiId: !GetAtt WebSocketStack.Outputs.WebSocketApiId
        EnableFirebaseNotifications: !Ref EnableFirebaseNotifications
        FirebaseProjectId: !If [ShouldEnableFirebase, !Ref FirebaseProjectId, ""]
        FirebaseServiceAccountKey: !If [ShouldEnableFirebase, !Ref FirebaseServiceAccountKey, ""]

  # S3 and CloudFront for Reports
  S3CloudFrontStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${CloudFormationBucket}.s3.amazonaws.com/s3-cloudfront.yaml'
      Parameters:
        Environment: !Ref Environment
        S3BucketName: !Ref S3BucketName
        EnableCustomDomain: !Ref EnableReportsCustomDomain
        DomainName: !Ref ReportsDomainName
        HostedZoneId: !Ref ReportsHostedZoneId
        AcmCertificateArn: !Ref ReportsAcmCertificateArn

  # Frontend Website Stack
  FrontendWebsiteStack:
    Type: AWS::CloudFormation::Stack
    Condition: ShouldDeployFrontend
    Properties:
      TemplateURL: !Sub 'https://${CloudFormationBucket}.s3.amazonaws.com/frontend-website.yaml'
      Parameters:
        Environment: !Ref Environment
        DomainName: !Ref FrontendDomainName
        HostedZoneId: !Ref FrontendHostedZoneId
        AcmCertificateArn: !Ref FrontendAcmCertificateArn
        EnableCustomDomain: !Ref EnableCustomDomain

  # Backup System Stack
  BackupSystemStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - DynamoDBStack
      - S3CloudFrontStack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${CloudFormationBucket}/backup-system.yaml'
      Parameters:
        Environment: !Ref Environment
        CloudFormationBucket: !Ref CloudFormationBucket
        BackupBucketName: !Ref BackupBucketName
        ReportsBucketName: !GetAtt S3CloudFrontStack.Outputs.ReportsBucketName
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: BackupSystem

  # SES Bounce and Complaint Handling System
  SESBounceComplaintStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${CloudFormationBucket}.s3.amazonaws.com/ses-bounce-complaint-system.yaml'
      Parameters:
        EnvironmentName: !Ref Environment
        FromEmail: !Ref FromEmail
        SesRegion: !Ref SesRegion
        CloudFormationBucket: !Ref CloudFormationBucket


Outputs:
  RestApiId:
    Description: REST API ID
    Value: !GetAtt ApiGatewayStack.Outputs.RestApiId
    Export:
      Name: !Sub '${AWS::StackName}-RestApiId'

  RestApiEndpoint:
    Description: REST API Endpoint
    Value: !GetAtt ApiGatewayStack.Outputs.RestApiEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-RestApiEndpoint'

  WebSocketApiId:
    Description: WebSocket API ID
    Value: !GetAtt WebSocketStack.Outputs.WebSocketApiId
    Export:
      Name: !Sub '${AWS::StackName}-WebSocketApiId'

  WebSocketApiEndpoint:
    Description: WebSocket API Endpoint
    Value: !GetAtt WebSocketStack.Outputs.WebSocketApiEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-WebSocketApiEndpoint'

  CloudFrontDistributionId:
    Description: CloudFront Distribution ID
    Value: !GetAtt S3CloudFrontStack.Outputs.CloudFrontDistributionId
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontDistributionId'

  CloudFrontDomainName:
    Description: CloudFront Domain Name
    Value: !GetAtt S3CloudFrontStack.Outputs.CloudFrontDomainName
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontDomainName'

  ReportsDomainName:
    Description: Reports Domain Name (Custom or CloudFront)
    Value: !If [ShouldEnableReportsCustomDomain, !Ref ReportsDomainName, !GetAtt S3CloudFrontStack.Outputs.CloudFrontDomainName]
    Export:
      Name: !Sub '${AWS::StackName}-ReportsDomainName'

  ReportsBaseUrl:
    Description: Base URL for reports (with https://)
    Value: !Sub 
      - 'https://${Domain}'
      - Domain: !If [ShouldEnableReportsCustomDomain, !Ref ReportsDomainName, !GetAtt S3CloudFrontStack.Outputs.CloudFrontDomainName]
    Export:
      Name: !Sub '${AWS::StackName}-ReportsBaseUrl'

  # Frontend Website Outputs
  FrontendWebsiteURL:
    Condition: ShouldDeployFrontend
    Description: Frontend Website URL
    Value: !GetAtt FrontendWebsiteStack.Outputs.WebsiteURL
    Export:
      Name: !Sub '${AWS::StackName}-FrontendWebsiteURL'

  FrontendBucketName:
    Condition: ShouldDeployFrontend
    Description: Frontend S3 Bucket Name
    Value: !GetAtt FrontendWebsiteStack.Outputs.WebsiteBucketName
    Export:
      Name: !Sub '${AWS::StackName}-FrontendBucketName'

  FrontendCloudFrontDistributionId:
    Condition: ShouldDeployFrontend
    Description: Frontend CloudFront Distribution ID
    Value: !GetAtt FrontendWebsiteStack.Outputs.CloudFrontDistributionId
    Export:
      Name: !Sub '${AWS::StackName}-FrontendCloudFrontDistributionId'

  FrontendCloudFrontDomainName:
    Condition: ShouldDeployFrontend
    Description: Frontend CloudFront Domain Name
    Value: !GetAtt FrontendWebsiteStack.Outputs.CloudFrontDomainName
    Export:
      Name: !Sub '${AWS::StackName}-FrontendCloudFrontDomainName'

  ApiWebhookStripePaymentUrl:
    Description: Stripe Payment Webhook Public URL
    Value: !Sub '${ApiGatewayStack.Outputs.RestApiEndpoint}/payments/stripe/webhook'
    Export:
      Name: !Sub '${AWS::StackName}-ApiWebhookStripePaymentUrl'

  InvoiceQueueUrl:
    Description: SQS Invoice Queue URL for asynchronous processing
    Value: !GetAtt InvoiceQueueStack.Outputs.InvoiceQueueUrl
    Export:
      Name: !Sub '${AWS::StackName}-InvoiceQueueUrl'

  EmailNotificationQueueUrl:
    Description: SQS Email Notification Queue URL for asynchronous email processing
    Value: !GetAtt NotificationQueueStack.Outputs.EmailNotificationQueueUrl
    Export:
      Name: !Sub '${AWS::StackName}-EmailNotificationQueueUrl'

  WebSocketNotificationQueueUrl:
    Description: SQS WebSocket Notification Queue URL for asynchronous websocket processing
    Value: !GetAtt NotificationQueueStack.Outputs.WebSocketNotificationQueueUrl
    Export:
      Name: !Sub '${AWS::StackName}-WebSocketNotificationQueueUrl'

  FirebaseNotificationQueueUrl:
    Condition: ShouldEnableFirebase
    Description: SQS Firebase Notification Queue URL for asynchronous push notification processing (only if Firebase enabled)
    Value: !GetAtt NotificationQueueStack.Outputs.FirebaseNotificationQueueUrl
    Export:
      Name: !Sub '${AWS::StackName}-FirebaseNotificationQueueUrl'

  # Backup System Outputs
  BackupFunctionName:
    Description: Name of the automated backup Lambda function
    Value: !GetAtt BackupSystemStack.Outputs.BackupLambdaFunctionName
    Export:
      Name: !Sub '${AWS::StackName}-BackupFunctionName'

  ManualBackupFunctionName:
    Description: Name of the manual backup Lambda function
    Value: !GetAtt BackupSystemStack.Outputs.ManualBackupLambdaFunctionName
    Export:
      Name: !Sub '${AWS::StackName}-ManualBackupFunctionName'

  BackupLocation:
    Description: S3 location where backups are stored
    Value: !GetAtt BackupSystemStack.Outputs.BackupLocation
    Export:
      Name: !Sub '${AWS::StackName}-BackupLocation'

  BackupBucketName:
    Description: Name of the S3 bucket used for storing backups
    Value: !GetAtt BackupSystemStack.Outputs.BackupBucketName
    Export:
      Name: !Sub '${AWS::StackName}-BackupBucketName'

  BackupNotificationsTopic:
    Description: SNS topic for backup notifications
    Value: !GetAtt BackupSystemStack.Outputs.BackupNotificationsTopicArn
    Export:
      Name: !Sub '${AWS::StackName}-BackupNotificationsTopic'

  BackupInstructions:
    Description: Instructions for manual backup and restoration
    Value: !GetAtt BackupSystemStack.Outputs.BackupInstructions
    Export:
      Name: !Sub '${AWS::StackName}-BackupInstructions'

  # SES Bounce and Complaint System Outputs
  SESBounceTopicArn:
    Description: ARN of the SES Bounce Notification SNS Topic
    Value: !GetAtt SESBounceComplaintStack.Outputs.SESBounceTopicArn
    Export:
      Name: !Sub '${AWS::StackName}-SESBounceTopicArn'

  SESComplaintTopicArn:
    Description: ARN of the SES Complaint Notification SNS Topic
    Value: !GetAtt SESBounceComplaintStack.Outputs.SESComplaintTopicArn
    Export:
      Name: !Sub '${AWS::StackName}-SESComplaintTopicArn'

  SESDeliveryTopicArn:
    Description: ARN of the SES Delivery Notification SNS Topic
    Value: !GetAtt SESBounceComplaintStack.Outputs.SESDeliveryTopicArn
    Export:
      Name: !Sub '${AWS::StackName}-SESDeliveryTopicArn'

  EmailSuppressionTableName:
    Description: Name of the Email Suppression DynamoDB Table
    Value: !GetAtt SESBounceComplaintStack.Outputs.EmailSuppressionTableName
    Export:
      Name: !Sub '${AWS::StackName}-EmailSuppressionTableName'

  EmailAnalyticsTableName:
    Description: Name of the Email Analytics DynamoDB Table
    Value: !GetAtt SESBounceComplaintStack.Outputs.EmailAnalyticsTableName
    Export:
      Name: !Sub '${AWS::StackName}-EmailAnalyticsTableName'
