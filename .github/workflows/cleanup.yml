name: Cleanup Environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to cleanup'
        required: true
        type: choice
        options:
        - development
        - production

env:
  # Set AWS region based on environment: us-east-1 for development, ap-southeast-2 for production
  AWS_REGION: ${{ github.event.inputs.environment == 'development' && 'us-east-1' || 'ap-southeast-2' }}

jobs:
  cleanup:
    name: Cleanup Environment
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Verify AWS credentials
      run: |
        echo "Verifying AWS credentials..."
        aws sts get-caller-identity
        echo "AWS credentials are working correctly"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install awscli

    - name: Make scripts executable
      run: |
        chmod +x *.sh
        chmod +x config/environments.sh

    - name: Check Route53 records before cleanup
      run: |
        echo "Checking Route53 records before cleanup..."
        ./cleanup-route53-records.sh
      continue-on-error: true

    - name: Confirm cleanup
      run: |
        echo "::warning::About to cleanup ${{ github.event.inputs.environment }} environment"
        echo "This will DELETE all resources in the ${{ github.event.inputs.environment }} environment"

    - name: Backup current state
      run: |
        echo "Creating backup of current state"
        mkdir -p backups
        
        # Backup CloudFormation stack template
        aws cloudformation get-template \
          --stack-name auto-lab-backend$([ "${{ github.event.inputs.environment }}" = "development" ] && echo "-dev" || echo "") \
          --query 'TemplateBody' > backups/stack-template-backup.json || echo "No stack to backup"
        
        # List current resources
        aws cloudformation describe-stack-resources \
          --stack-name auto-lab-backend$([ "${{ github.event.inputs.environment }}" = "development" ] && echo "-dev" || echo "") \
          > backups/stack-resources-backup.json || echo "No resources to backup"
      env:
        AUTO_LAB_ENV: ${{ github.event.inputs.environment }}
      continue-on-error: true

    - name: Run cleanup
      run: |
        echo "Running cleanup for ${{ github.event.inputs.environment }} environment"
        # Use yes to automatically confirm the cleanup prompt
        echo "y" | ./cleanup.sh --env ${{ github.event.inputs.environment }}
      env:
        AUTO_LAB_ENV: ${{ github.event.inputs.environment }}

    - name: Verify cleanup
      run: |
        echo "Verifying cleanup completion"
        
        # Check if stack still exists
        STACK_NAME="auto-lab-backend$([ "${{ github.event.inputs.environment }}" = "development" ] && echo "-dev" || echo "")"
        
        if aws cloudformation describe-stacks --stack-name "$STACK_NAME" 2>/dev/null; then
          echo "::warning::Stack $STACK_NAME still exists. Cleanup may be in progress."
        else
          echo "::notice::Stack $STACK_NAME has been successfully deleted."
        fi
      env:
        AUTO_LAB_ENV: ${{ github.event.inputs.environment }}
      continue-on-error: true

    - name: Check for orphaned Route53 records after cleanup
      run: |
        echo "Checking for orphaned Route53 records after cleanup..."
        ./cleanup-route53-records.sh
        
        echo ""
        echo "If orphaned Route53 records were found, they need to be cleaned up manually via AWS Console:"
        echo "::warning::Orphaned Route53 records may require AWS Console cleanup - see cleanup-route53-records.sh output above"
      continue-on-error: true

    - name: Upload backup artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cleanup-backup-${{ github.event.inputs.environment }}-${{ github.run_number }}
        path: backups/
        retention-days: 30
      if: always()

